--------------------------------------------------------------------------------------------------
                        LAMBDA:
lambda √® un modo veloce per scrivere una funzione ‚Äúal volo‚Äù.
√à utile quando devi passare una funzione a un bottone o a .bind() ma non ti serve darle un nome.

esempio:
bottone.bind("<Enter>", lambda e: bottone.config(fg="blue"))

lambda e: √® una funzione anonima, cio√® senza nome.
e √® l‚Äôargomento della funzione, e rappresenta l‚Äôevento (e = event, abbreviato).
Dopo i : scrivi quello che deve fare.

esempi per far capire meglio:
    - def saluta(nome):
        print("Ciao", nome)

    - saluta = lambda nome: print("Ciao", nome)

    - bottone.bind("<Leave>", lambda e: bottone.config(fg="black"))

lambda e: bottone.config(fg="blue")  ‚úÖ  ‚Üê giusto!
lambda: bottone.config(fg="blue")    ‚ùå  ‚Üê errore!

in riassunto:
Cosa	        Significa
lambda	        Funzione anonima, veloce
e:	            L'evento passato da .bind()
lambda e:	    Mini-funzione che riceve l'evento


--------------------------------------------------------------------------------------------------
                        FG:
fg sta per foreground ‚Äî ovvero il colore del testo (di solito nei Label, Button, ecc).

esempio:
tk.Label(root, text="Ciao!", fg="red").pack()

Opzione	    Significato	            Esempio
fg	        Colore del testo	    fg="blue"
bg	        Colore dello sfondo	    bg="black"


--------------------------------------------------------------------------------------------------
                        BIND:
Il metodo .bind() collega un evento a una funzione.
Cio√®: "quando succede qualcosa, fai questa cosa" üòé

esempio:
def saluta(event):
    print("Hai cliccato sul bottone!")

bottone = tk.Button(root, text="Cliccami")
bottone.pack()

bottone.bind("<Button-1>", saluta)  # <Button-1> = click sinistro

- comandi piu comuni:
Evento	    Significato
<Button-1>	Click tasto sinistro del mouse
<Button-2>	Click tasto centrale
<Button-3>	Click tasto destro
<Enter>	    Il mouse entra nel widget
<Leave>	    Il mouse esce dal widget
<Key>	    Viene premuto un tasto
<Return>	Invio
<Escape>	ESC


--------------------------------------------------------------------------------------------------
                        STRIP:
Il metodo .strip() serve per pulire le stringhe:
üëâ toglie gli spazi (e altri caratteri) all'inizio e alla fine della stringa.

esempio:
nome = "  Mario  "
print(nome.strip())  # ‚Üí "Mario"

Metodo	    Cosa fa
strip()	    Togli a sinistra e destra
lstrip()	Togli solo a sinistra
rstrip()	Togli solo a destra


--------------------------------------------------------------------------------------------------  pack/grid/place!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                        PACK:
pack √® il pi√π semplice dei tre.
Funziona come se dicessi: ‚ÄúMetti questo sopra, questo sotto, questo a sinistra, ecc.‚Äù
√à facile da usare ma non super preciso.

--------------------------------------------------------------------------------------------------  pack/grid/place!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                        GRID:
grid funziona come se dividessi la finestra in una tabella fatta di righe e colonne.
√à molto comodo per creare form, menu, o schede organizzate.

tk.Label(root, text="Username").grid(row=0, column=0)
tk.Entry(root).grid(row=0, column=1)
tk.Label(root, text="Password").grid(row=1, column=0)
tk.Entry(root, show="*").grid(row=1, column=1)

Questo crea due righe con label e input affiancati

--------------------------------------------------------------------------------------------------  pack/grid/place!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                        PLACE:
place ti d√† il controllo totale: puoi mettere ogni widget dove vuoi, pixel per pixel.
Ma √® anche il pi√π pericoloso, perch√© non si adatta bene se ridimensioni la finestra.

label = tk.Label(root, text="Login")
label.place(x=100, y=50)

riepilogo:
Metodo  |   Controllo   | Adattabile    | Semplicit√†    | Uso tipico
pack    |   Basso       | Medio         | Altissima     | Layout semplice e verticale
grid    |   Medio       | Alto          | Buona         | Layout a righe/colonne
place   |   Altissimo   | Basso         | Media         | Posizionamento preciso (animazioni, giochi)